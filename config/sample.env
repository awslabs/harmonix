# This file defines the names of the environment variables that are referenced
# by platform IaC scripts and Backstage configuration files.
# Usage: Copy this file to `.env` and update values in the new file

# A note about GitLab and GitHub
#
# Out of the box, Harmonix can utilize either GitLab or GitHub (or both) for version-controlling applications and software templates. 
#
# The default Harmonix installation assumes that GitLab will be used for version control and CICD. The Harmonix installation scripts create
# a GitLab (Community Edition) host on AWS for this purpose. The hosted GitLab solution is intended to be temporary and for demonstration
# purposes only. If you do not wish to integrate Backstage with GitLab you can make the following changes:
#    * iac/roots/opa-platform/src/opa-platform-stack.ts - comment out GitLab Host and Runner constructs. This should also be done if you are using your own GitLab and not one created by Harmonix platform IaC
#    * backstage app-config yaml files - remove references to gitlab
#    * Harmonix software templates generally contain GitLab CICD files that would not be needed if you are not using GitLab. GitLab CICD files are named like so: ".gitlab-ci.yml".
#    * Update software templates (template.yaml files) that target gitlab for repository creation - look for the "action: publish:gitlab" configuration
# See this Backstage documenation for more details on how Backstage integrates with GitLab - https://backstage.io/docs/integrations/gitlab/locations
#
# GitHub is supported as an optional version control system. However, as of this release, Harmonix does not provide any GitHub Actions
# CICD configurations in its custom Backstage templates (but you can add these yourself). Harmonix does not create any temporary hosted GitHub solution. To remove GitHub
# from Harmonix:
#    * ignore making changes to any variables in this file that start with "GITHUB"
#    * update backstage app-config yaml files - remove references to github
# See this Backstage documentation for details on how Backstage integrates with GitHub - https://backstage.io/docs/integrations/github/locations#configuration

# --- BEGIN CONFIGURATIONS NEEDED BEFORE EXECUTING THE PLATFORM IaC ---------

# 12 digit AWS account ID to deploy Backstage/OPA platform resources to
# Example AWS_ACCOUNT_ID=0000000000
AWS_ACCOUNT_ID="TODO"

# by deployment scripts.

# The application name that is used to name resources
# It is best to use a short value to avoid resource name length limits
APP_NAME="opa"

# a prefix for the application / environment
OPA_PREFIX="opa"

# AWS region used as the default for AWS CLI commands
# Example: us-east-1
AWS_DEFAULT_REGION=us-east-1

# The version of GitLab to install into an EC2 instance
# Comment out this value or leave it blank to get the latest version.
# Note that the latest version may not have been tested.  Refer to the documentation to verify the latest tested version
# https://harmonixonaws.io//docs/getting-started/deploy-the-platform
GITLAB_VERSION=17.10.3

# Automation key Example - AUTOMATION_KEY=eZv5ofW3KnR3kVabMW4ZcDNLPl9VmMW
AUTOMATION_KEY="TODO"

# The name of the secret that contains Okta info
OKTA_SECRET_NAME="opa-okta-secrets"


# Route 53 hosted zone for the Backstage/OPA platform deployment
# Example: R53_HOSTED_ZONE_NAME=mycompany.com
R53_HOSTED_ZONE_NAME="TODO"

# Comma separated list of IPv4 CIDR ranges to allow requests to Backstage/GitLab load balancers
# The public IPv4 CIDR of the machine running the installation script is mandatory
# After installation, the IP can be removed from the Security Group
# In order to obtain your public IP, visit: https://checkip.amazonaws.com/. CIDR should be formated as: "<MyIP>/32" eg. "1.2.3.4/32"
# 
# It is STRONGLY recommended that you do not use 0.0.0.0/0 since this will open access to the entire internet.
# Only use 0.0.0.0/0 if you are certain that alternative implementations (firewalls, network routing) will prevent unintended access.
ALLOWED_IPS="TODO"

# Okta Identity Provider Configurations
# See RoadieHQ documentation for details: https://www.npmjs.com/package/@roadiehq/catalog-backend-module-okta
OKTA_API_TOKEN="TODO"
# The org URL for your Okta domain (e.g. https://dev-12345678.okta.com)
OKTA_AUDIENCE="https://TODO.okta.com"
OKTA_AUTH_SERVER_ID=""
# Application needs to be configured as mentioned in [Backstage Authentication documentation](https://backstage.io/docs/auth/)
OKTA_CLIENT_ID="TODO"
OKTA_CLIENT_SECRET="TODO"
OKTA_IDP=""

# The Github Org Admin token value, which must be set manually before running the Harmonix 
# installation, (only if you plan to use GitHub), because the value is not generated.
# If you do NOT want to integrate Backstage with GitHub, you can leave this value as "TODO", but 
# you should then also delete or comment-out the
# below section in backstage/app-config.yaml after Backstage has been downloaded
# during the Harmonix installation process -
# integrations:
#  github:
GITHUB_TOKEN="TODO"

# --- END CONFIGURATIONS NEEDED BEFORE EXECUTING THE PLATFORM IaC -----------

# --- BEGIN BACKSTAGE CONFIGURATIONS NEEDED AFTER EXECUTING THE PLATFORM IaC ----------

# The token to use for calling GitLab APIs
# This secret is created when the platform IaC is executed
# The secret will contain multiple configs, one of which is the apiToken
# There is no need to set the value for this field manually. It will be set by
# the set-gitlab-token-env-var Make target, which is called automatically during installation
SECRET_GITLAB_CONFIG_PROP_apiToken="TODO"

# The name of the Backstage hosting organization.  This will be displayed in the UI
# Example: My Company Name
CUSTOMER_NAME="TODO"

# URL to an organization logo.  This will be displayed for branding in the UI
# Example: https://companieslogo.com/img/orig/AMZN_BIG-accd00da.png
CUSTOMER_LOGO="TODO"

# URL to the icon image of the hosting organization logo.  This will be displayed for branding in the UI
# Example: https://companieslogo.com/img/orig/AMZN.D-13fddc58.png
CUSTOMER_LOGO_ICON="TODO"

# Committer name used by the Backstage scaffolder for git commits
BACKSTAGE_SCAFFOLDER_NAME="Backstage Scaffolder"

# Email address used by the Backstage scaffolder for git commits
BACKSTAGE_SCAFFOLDER_EMAIL="mycompany-admin@amazon.com"

# Backstage database configurations for local testing
POSTGRES_HOST="localhost"
POSTGRES_PORT="5432"
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="example"

# The GitHub host name (without any protocol)
GITHUB_HOSTNAME="github.com"

# The GitLab host name (without any protocol)
# When using the GitLab instance provisioned by the platform solution, then
# this value will be the same as the R53_HOSTED_ZONE_NAME prefixed with 'git.'
# Example: git.mycompany.com
GITLAB_HOSTNAME="git.example.com"

GITLAB_URL="https://git.example.comv"

# The name of the secret that contains GitLab info
GITLAB_SECRET_NAME=opa-admin-gitlab-secrets

# The name of the secret that contains GitHub info
# Comment this variable out if you do not plan to integrate Backstage with GitHub
# See Github explanations at the top of this file for more details
GITHUB_SECRET_NAME=opa-admin-github-secrets

# toggle if create environment provisioning role is required
CREATE_ENV_PROVISIONING_ROLE="true"

# toggle to create automation key
CREATE_AUTOMATION_SECRET="true"

# --- END BACKSTAGECONFIGURATIONS NEEDED AFTER EXECUTING THE PLATFORM IaC ------------

# Configuration to allow node 20 or newer to be used to build backstage
NODE_OPTIONS=--no-node-snapshot
